{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","lastKeyPressed","setLastKeyPressed","handleKeyPress","event","key","useEffect","document","addEventListener","removeEventListener","className","ReactDOM","render","getElementById"],"mappings":"sLAEaA,EAAgB,WAC3B,MAA4CC,mBAAwB,MAApE,mBAAOC,EAAP,KAAuBC,EAAvB,KAEA,SAASC,EAAeC,GACtBF,EAAkBE,EAAMC,KAW1B,OARAC,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,UAAWL,GAE9B,WACLI,SAASE,oBAAoB,UAAWN,MAEzC,IAGD,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAc,mCAA+BA,EAA/B,KAAmD,+B,MCf1EU,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.2ae954ee.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [lastKeyPressed, setLastKeyPressed] = useState<string | null>(null);\n\n  function handleKeyPress(event: KeyboardEvent) {\n    setLastKeyPressed(event.key);\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <p className=\"App__message\">\n        {lastKeyPressed ? `The last pressed key is [${lastKeyPressed}]` : 'Nothing was pressed yet'}\n      </p>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}